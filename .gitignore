# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
PACKAGES

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is best to have this file in the project root directory.
.idea/

# =============================================================================
# THREAT HUNTER PRO - SECURITY-FOCUSED GITIGNORE
# =============================================================================

# Application-specific ignores
# Database files
/var/ossec/integrations/threat_hunter_db/
*.faiss
*.json.bak

# Log files
*.log

# Environment variables (contain API keys and secrets)
.env
.env.*
!.env.example
.env.local
.env.production
.env.development
.env.test
.env.staging

# Backup files
*.backup
*.bak
app.py.backup

# Development folders
Original Refactor/
broken_version/

# OS files
.DS_Store
Thumbs.db

# =============================================================================
# SECURITY-SENSITIVE FILES AND DIRECTORIES
# =============================================================================

# Secrets and encryption keys
*.key
*.pem
*.p12
*.pfx
*.crt
*.csr
secrets/
keys/
certificates/
vault/

# Authentication and session files
.htpasswd
auth.json
session_keys.json
jwt_keys.json
mfa_secrets.json

# Threat Hunter specific security files
/var/ossec/integrations/threat_hunter_secrets/
security_config.json
audit_keys.json
encryption_keys.json

# Database connection files
database.json
db_credentials.json
connection_strings.json

# API keys and tokens
api_keys.json
tokens.json
credentials.json
service_account.json
.credentials

# Security logs and audit trails
security.log*
audit.log*
access.log*
error.log*
/var/log/threat_hunter/

# Temporary security files
*.tmp.key
*.temp.crt
security_*.tmp

# =============================================================================
# CLOUD PROVIDER CREDENTIALS
# =============================================================================

# AWS
.aws/
aws_credentials
.boto
boto.cfg

# Google Cloud
gcloud/
.gcp/
service-account-*.json
google-credentials.json

# Azure
.azure/
azure-credentials.json
azureProfile.json

# =============================================================================
# VAULT AND SECRET MANAGEMENT
# =============================================================================

# HashiCorp Vault
.vault-token
vault_keys.json
unseal_keys.json

# Kubernetes secrets
*.kubeconfig
secrets.yaml
sealed-secrets/

# Docker secrets
docker_secrets/
.docker/

# =============================================================================
# MONITORING AND ALERTING
# =============================================================================

# Grafana
grafana.ini
grafana_data/

# Prometheus
prometheus_data/
alertmanager_data/

# Elasticsearch
elasticsearch_data/
kibana_data/

# =============================================================================
# THREAT INTELLIGENCE AND ANALYSIS
# =============================================================================

# Threat intel feeds
threat_feeds/
*.stix
*.stix2
*.ioc
malware_samples/
threat_intel_cache/

# Analysis results
analysis_reports/
forensic_images/
memory_dumps/

# =============================================================================
# BACKUP AND RECOVERY
# =============================================================================

# Backup files
backups/
*.backup
*.dump
*.sql.gz
recovery_files/

# Snapshot files
snapshots/
*.snapshot
*.vmdk
*.vhd

# =============================================================================
# DEVELOPMENT AND TESTING OVERRIDES
# =============================================================================

# Test databases with sensitive data
test_data_*.db
test_secrets.json
mock_credentials.json

# Development certificates
dev_certs/
localhost.crt
localhost.key

# IDE security plugin files
.vscode/settings.json
.idea/security.xml

# =============================================================================
# COMPLIANCE AND AUDITING
# =============================================================================

# Compliance reports
compliance_reports/
audit_reports/
soc2_evidence/
gdpr_reports/

# Personal data exports
personal_data/
user_exports/
data_subject_requests/

# =============================================================================
# NETWORK AND INFRASTRUCTURE
# =============================================================================

# Network configs with sensitive info
network_config.json
firewall_rules.json
vpn_configs/

# Infrastructure as code with secrets
terraform.tfvars
terraform.tfstate*
.terraform/
ansible_vault_*

# =============================================================================
# MISCELLANEOUS SECURITY
# =============================================================================

# Password files
passwords.txt
password_list.txt
wordlists/

# SSH keys
id_rsa*
id_ed25519*
id_ecdsa*
known_hosts
authorized_keys

# SSL/TLS related
*.p7b
*.p7c
*.p7r
*.spc

# GPG keys
*.gpg
*.asc
*.sig
.gnupg/

# Certificate stores
*.jks
*.keystore
*.truststore

# =============================================================================
# SYSTEM ADMINISTRATION
# =============================================================================

# System logs that might contain sensitive data
/var/log/
/etc/shadow
/etc/passwd.bak
system_backup_*

# Package manager files with credentials
pip.conf
.pypirc
.npmrc
.yarnrc

# =============================================================================
# NOTES FOR SECURITY TEAM
# =============================================================================
# 
# This gitignore file is designed to prevent accidental commits of:
# 1. API keys, passwords, and other secrets
# 2. Certificates and cryptographic keys  
# 3. Database files containing sensitive data
# 4. Log files that may contain PII or security info
# 5. Backup files that could expose sensitive data
# 6. Cloud provider credentials
# 7. Threat intelligence data
# 8. Compliance and audit materials
#
# Remember to:
# - Regularly audit what files are being committed
# - Use git-secrets or similar tools to scan for secrets
# - Keep this file updated as new sensitive file types are identified
# - Train developers on secure coding practices
# - Use separate repositories for truly sensitive documentation
#
# =============================================================================